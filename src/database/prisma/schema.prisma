datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id          Int        @id @default(autoincrement())
    name        String
    email       String     @unique
    password    String
    role        Role       @default(CLIENT)
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
    userQuizzes UserQuiz[]
}

model Category {
    id          Int                @id @default(autoincrement())
    title       String
    description String?
    createdAt   DateTime           @default(now())
    updatedAt   DateTime           @updatedAt
    questions   QuestionCategory[]
}

model Question {
    id            Int                @id @default(autoincrement())
    title         String
    answer1       String
    answer2       String
    answer3       String
    answer4       String
    correctAnswer Int
    difficulty    Difficulty
    createdAt     DateTime           @default(now())
    updatedAt     DateTime           @updatedAt
    userAnswers   UserAnswer[]
    quizQuestions QuizQuestion[]
    categories    QuestionCategory[]
}

model Quiz {
    id            Int            @id @default(autoincrement())
    title         String
    description   String?
    time          DateTime?
    difficulty    Difficulty
    createdAt     DateTime       @default(now())
    updatedAt     DateTime       @updatedAt
    userQuizzes   UserQuiz[]
    quizQuestions QuizQuestion[]
}

model QuizQuestion {
    id         Int      @id @default(autoincrement())
    quizId     Int
    quiz       Quiz     @relation(fields: [quizId], references: [id])
    questionId Int
    question   Question @relation(fields: [questionId], references: [id])
}

model QuestionCategory {
    id         Int      @id @default(autoincrement())
    categoryId Int
    category   Category @relation(fields: [categoryId], references: [id])
    questionId Int
    question   Question @relation(fields: [questionId], references: [id])
}

model UserQuiz {
    id          Int          @id @default(autoincrement())
    userId      Int
    user        User         @relation(fields: [userId], references: [id])
    quizId      Int
    quiz        Quiz         @relation(fields: [quizId], references: [id])
    score       Int?
    startTime   DateTime?
    endTime     DateTime?
    userAnswers UserAnswer[]
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
}

model UserAnswer {
    id           Int      @id @default(autoincrement())
    userQuizId   Int
    userQuiz     UserQuiz @relation(fields: [userQuizId], references: [id])
    questionId   Int
    question     Question @relation(fields: [questionId], references: [id])
    answerChosen Int
    isCorrect    Boolean
}

enum Role {
    CLIENT
    ADMIN
    OPERATOR
    DEACTIVATED
}

enum Difficulty {
    EASY
    MEDIUM
    DIFFICULT
}
